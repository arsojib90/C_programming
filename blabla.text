1.Newton 

        #include<stdio.h>
        #include<math.h>
        #define e 0.001
        #define f(x) pow(x,3)-4*x+1
        #define df(x) 3*x*x-4

        void main()
        {
            float x0,x1,f0,f1,df0;
            int i=0;
            printf("enter the value of x0=");
            scanf("%f",&x0);

            do{
                f0=f(x0);
                df0=df(x0);
                x1=x0-(f0/df0);
                f1=f(x1);
                x0=x1;
                i++;
                printf("no of itteration=%d\t",i);
                printf("root=%f\t",x1);
                printf("the value of function=%f\n",f1);
            }while(fabs(f1)>e);

            return 0;

        }



2.Euler

        
        #include<stdio.h>
        #include<math.h>
        #define f(x,y) (x+y)

        void main()
        {
            float a,b,x,y,t,k,h;
            printf("enter the value of x0,y0,h and xn =");
            scanf("%f%f%f%f",&a,&b,&h,&t);
            x=a;
            y=b;
            while(x<t)
            {
                k=h*f(x,y);
                y=y+k;
                x=x+h;
                printf("x=%f\ty=%f\t",x,y);
                printf("approximation =%f\n",x+y);

            }

            return 0;
        }




3.Range-kutta

        #include<stdio.h>
        #include<conio.h>

        #define f(x,y) (x+y)

        int main()
        {
            float x0, y0, xn, h, yn, k1, k2, k3, k4, k;
            int i, n;
            printf("Enter Initial Condition\n");
            printf("x0 = ");
            scanf("%f", &x0);
            printf("y0 = ");
            scanf("%f", &y0);
            printf("Enter calculation point xn = ");
            scanf("%f", &xn);
            printf("Enter number of steps: ");
            scanf("%d", &n);

            /* Calculating step size (h) */
            h = (xn-x0)/n;

            /* Runge Kutta Method */
            printf("\nx0\ty0\tyn\n");
            for(i=0; i < n; i++)
            {
            k1 = h * (f(x0, y0));
            k2 = h * (f((x0+h/2), (y0+k1/2)));
            k3 = h * (f((x0+h/2), (y0+k2/2)));
            k4 = h * (f((x0+h), (y0+k3)));
            k = (k1+2*k2+2*k3+k4)/6;
            yn = y0 + k;
            printf("%0.4f\t%0.4f\t%0.4f\n",x0,y0,yn);
            x0 = x0+h;
            y0 = yn;
            }

            /* Displaying result */
            printf("\nValue of y at x = %0.2f is %0.3f",xn, yn);
            return 0;
        }



4.Gauss-Seidal 

    #include<stdio.h>
    #include<conio.h>
    #include<math.h>

    /* In this example we are solving
    3x + 20y - z = -18
    2x - 3y + 20z = 25
    20x + y - 2z = 17
    */
    /* Arranging given system of linear
    equations in diagonally dominant
    form:
    20x + y - 2z = 17
    3x + 20y -z = -18
    2x - 3y + 20z = 25
    */
    /* Equations:
    x = (17-y+2z)/20
    y = (-18-3x+z)/20
    z = (25-2x+3y)/20
    */
    /* Defining function */
    /* Code Starts from here */

    #define f1(x,y,z)  (17-y+2*z)/20
    #define f2(x,y,z)  (-18-3*x+z)/20
    #define f3(x,y,z)  (25-2*x+3*y)/20

    /* Main function */
    int main()
    {
    float x0=0, y0=0, z0=0, x1, y1, z1, e1, e2, e3, e;
    int count=1;
    printf("Enter tolerable error:\n");
    scanf("%f", &e);

    printf("\nCount\tx\ty\tz\n");
    do
    {
    /* Calculation */
    x1 = f1(x0,y0,z0);
    y1 = f2(x1,y0,z0);
    z1 = f3(x1,y1,z0);
    printf("%d\t%0.4f\t%0.4f\t%0.4f\n",count, x1,y1,z1);

    /* Error */
    e1 = fabs(x0-x1);
    e2 = fabs(y0-y1);
    e3 = fabs(z0-z1);

    count++;

    /* Set value for next iteration */
    x0 = x1;
    y0 = y1;
    z0 = z1;

    }while(e1>e && e2>e && e3>e);

    printf("\nSolution: x=%0.3f, y=%0.3f and z = %0.3f\n",x1,y1,z1);

    return 0;
    }


5.Bisection 

        #include<stdio.h>
        #include<math.h>
        #define e 0.001
        #define f(x) x*x*x-4*x+1

        void main()
        {
            float x0,x1,x2;
            float f0,f1,f2;
            int i=0;
            printf("enter the value of x0 and x1  =");
            scanf("%f %f",&x0,&x1);

            do{
                f0=f(x0);
                f1=f(x1);
                x2=(x0+x1)/2;
                f2=f(x2);
                if(f0*f2<0)
                {
                    x1=x2;
                }
                else
                {
                    x0=x2;
                }
                i++;
                printf("no of itteration=%d \n",i);
                printf("root of the equation is=%f\n",x2);
                printf("value of function=%f\n\n",f2);

            }while(fabs(f2)>e);




        return 0;


        }


6.Trapezoidal 

        #include<stdio.h>
        #include<conio.h>
        #include<math.h>

        /* Define function here */
        #define f(x) 1/(1+pow(x,2))

        int main()
        {
        float lower, upper, integration=0.0, stepSize, k;
        int i, subInterval;
        /* Input */
        printf("Enter lower limit of integration: ");
        scanf("%f", &lower);
        printf("Enter upper limit of integration: ");
        scanf("%f", &upper);
        printf("Enter number of sub intervals: ");
        scanf("%d", &subInterval);

        /* Calculation */
        /* Finding step size */
        stepSize = (upper - lower)/subInterval;

        /* Finding Integration Value */
        integration = f(lower) + f(upper);
        for(i=1; i<= subInterval-1; i++)
        {
        k = lower + i*stepSize;
        integration = integration + 2 * f(k);
        }
        integration = integration * stepSize/2;
        printf("\nRequired value of integration is: %.3f", integration);
        return 0;
        }



end
